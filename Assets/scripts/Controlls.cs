//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.3.0
//     from Assets/scripts/Controlls.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

namespace topdown
{
    public partial class @Controlls : IInputActionCollection2, IDisposable
    {
        public InputActionAsset asset { get; }
        public @Controlls()
        {
            asset = InputActionAsset.FromJson(@"{
    ""name"": ""Controlls"",
    ""maps"": [
        {
            ""name"": ""Player"",
            ""id"": ""e0b78307-0d71-4398-b90d-6d5c05655a4d"",
            ""actions"": [
                {
                    ""name"": ""Walking"",
                    ""type"": ""Value"",
                    ""id"": ""dcd05624-d70e-4933-94d4-24edb099900c"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Accept"",
                    ""type"": ""Button"",
                    ""id"": ""e2d57ddb-1230-4f00-a2dd-26b9b9f92105"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Look"",
                    ""type"": ""Value"",
                    ""id"": ""e633086f-8c57-4efc-b9f9-ef33015c4deb"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Attack"",
                    ""type"": ""Button"",
                    ""id"": ""9f6f0cbd-1546-4bc1-98c3-caaa1fa6391c"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Hold(duration=1),Press(behavior=1)"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Dash"",
                    ""type"": ""Button"",
                    ""id"": ""80c1ca2e-c422-47e6-b3ca-1346f6c351c1"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Press(behavior=1)"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""MouseLook"",
                    ""type"": ""Value"",
                    ""id"": ""26f11cd3-a6bf-4d9c-b9af-2fb7699c7dde"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""SlowMo"",
                    ""type"": ""Button"",
                    ""id"": ""cd8c07fc-eb14-4486-95a8-0906d9f6bdc3"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""OpenInventory"",
                    ""type"": ""Button"",
                    ""id"": ""3d419203-daa4-49c7-89cb-162cef133823"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""MoveInventoryLeft"",
                    ""type"": ""Button"",
                    ""id"": ""45e95227-faab-49dd-b6a0-cd96f56982fd"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Press(behavior=1)"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""MoveInventoryRight"",
                    ""type"": ""Button"",
                    ""id"": ""97526099-d7dc-49e9-8ae8-4d830818b624"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Press(behavior=1)"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""AttackRelease"",
                    ""type"": ""Button"",
                    ""id"": ""3095f6db-6a5a-4f2e-bd8a-608066c2f3cd"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Press(behavior=1)"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Pause"",
                    ""type"": ""Button"",
                    ""id"": ""d4f1d09a-c8bf-4ab6-8843-946daf1293cf"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Press(behavior=1)"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Parry"",
                    ""type"": ""Button"",
                    ""id"": ""3994cde1-53ed-46cf-8402-4038a311566d"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Press"",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""wasd"",
                    ""id"": ""9ac9a7de-b63b-4256-9591-57ced5d8bead"",
                    ""path"": ""2DVector(mode=1)"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Walking"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""821c250d-1e65-417a-9a31-65c32cdacf5e"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Player"",
                    ""action"": ""Walking"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""4648f241-ea0f-4940-b387-280eed44f0bd"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Player"",
                    ""action"": ""Walking"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""e955bc13-c083-4c77-91da-87119b816c30"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Player"",
                    ""action"": ""Walking"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""b752b00f-d96e-4ce8-ab85-223140b77e22"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Player"",
                    ""action"": ""Walking"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""e3486d2c-b647-4291-9ce7-a05fd4f2038f"",
                    ""path"": ""<DualShockGamepad>/leftStick"",
                    ""interactions"": """",
                    ""processors"": ""AxisDeadzone(min=0.4)"",
                    ""groups"": ""Player"",
                    ""action"": ""Walking"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c9c4bd6f-595d-45f6-91f9-bf4143909ab3"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": ""Press"",
                    ""processors"": """",
                    ""groups"": ""Player"",
                    ""action"": ""Accept"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""39f33471-8d38-42ab-a225-576b895c4025"",
                    ""path"": ""<DualShockGamepad>/buttonSouth"",
                    ""interactions"": ""Press"",
                    ""processors"": """",
                    ""groups"": ""Player"",
                    ""action"": ""Accept"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f4df0cdd-bdf3-41a4-8a50-2d6dbb6ebc5a"",
                    ""path"": ""<Gamepad>/rightStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Player"",
                    ""action"": ""Look"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""60585852-7216-4c61-9afc-424056dd4d8f"",
                    ""path"": ""<Gamepad>/buttonWest"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Player"",
                    ""action"": ""Attack"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f29b3c78-d93d-43cc-a56a-78301454f9aa"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Player"",
                    ""action"": ""Attack"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""50288d98-15bc-4d46-82f7-e7dd567c2fea"",
                    ""path"": ""<Gamepad>/buttonEast"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Player"",
                    ""action"": ""Dash"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""235e4f04-92db-413e-b8b4-dfaf89a2897b"",
                    ""path"": ""<Keyboard>/leftShift"",
                    ""interactions"": ""Press(behavior=1)"",
                    ""processors"": """",
                    ""groups"": ""Player"",
                    ""action"": ""Dash"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0afb01d6-0b3a-45c6-b796-a1265f3c3233"",
                    ""path"": ""<Mouse>/position"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Player"",
                    ""action"": ""MouseLook"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""45fa0efa-4196-4ef5-a3f4-277c1c1fcd60"",
                    ""path"": ""<Keyboard>/leftCtrl"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Player"",
                    ""action"": ""SlowMo"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""76f6c133-80ce-4de6-82e3-58671a45d110"",
                    ""path"": ""<Gamepad>/leftShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Player"",
                    ""action"": ""SlowMo"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""21ab0ff6-ca79-4b42-8096-4b112ae95df7"",
                    ""path"": ""<Keyboard>/tab"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Player"",
                    ""action"": ""OpenInventory"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""de5191d1-dcde-4d7c-a386-74e18c7a80a5"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Player"",
                    ""action"": ""MoveInventoryLeft"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""20ba1733-1a3b-448e-ad3b-2d76f973cb07"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Player"",
                    ""action"": ""MoveInventoryRight"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5d747806-2000-4a09-a055-c485e7aaac12"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": ""Press(behavior=1)"",
                    ""processors"": """",
                    ""groups"": ""Player"",
                    ""action"": ""AttackRelease"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""da61e610-8d2c-4e85-8a9b-c9783a7be7ef"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Player"",
                    ""action"": ""Pause"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1111a6f6-25f5-40fa-854b-87ef3305e799"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Player"",
                    ""action"": ""Parry"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""UI"",
            ""id"": ""6da180a1-9864-4425-993b-7983cd38728a"",
            ""actions"": [
                {
                    ""name"": ""Direction"",
                    ""type"": ""Value"",
                    ""id"": ""71aa51fb-2a0c-4826-b06c-1a0b6004df77"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Accept"",
                    ""type"": ""Button"",
                    ""id"": ""22e65a8f-a949-4822-9481-2fe06acab130"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""PointMouse"",
                    ""type"": ""Value"",
                    ""id"": ""a8bd2811-1750-4107-b6f1-ede362c749e7"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""5c221326-77da-400a-9705-333796f760a4"",
                    ""path"": ""<Gamepad>/dpad"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""UI"",
                    ""action"": ""Direction"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""WASD"",
                    ""id"": ""957276be-fa4e-4556-9f58-f72f789392ac"",
                    ""path"": ""2DVector"",
                    ""interactions"": ""Press"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Direction"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""3f1fe615-92ef-40b2-af57-d92752d48176"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""UI"",
                    ""action"": ""Direction"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""ae951a7d-860d-4feb-ba8f-9cb5d5149f18"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""UI"",
                    ""action"": ""Direction"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""f9a90865-2a86-426c-b617-2d5b19155f8c"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""UI"",
                    ""action"": ""Direction"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""f0357b18-4d1d-4db8-8d62-cef6788da9c6"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""UI"",
                    ""action"": ""Direction"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""431e53a1-0916-4c57-8a33-ca0f315ed3dd"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""UI"",
                    ""action"": ""Accept"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""32f66309-32c3-433b-aa6a-2e631bc16f2c"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""UI"",
                    ""action"": ""Accept"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b50cdf58-1940-405f-aa3f-da491d09f44d"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""UI"",
                    ""action"": ""Accept"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9d667d2b-16b7-41f8-bdcc-2e1c32863c15"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Player"",
                    ""action"": ""Accept"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0a0a8314-c6ef-47bf-a6b9-49ef57cb3f00"",
                    ""path"": ""<Mouse>/position"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""UI"",
                    ""action"": ""PointMouse"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": [
        {
            ""name"": ""Player"",
            ""bindingGroup"": ""Player"",
            ""devices"": []
        },
        {
            ""name"": ""UI"",
            ""bindingGroup"": ""UI"",
            ""devices"": []
        }
    ]
}");
            // Player
            m_Player = asset.FindActionMap("Player", throwIfNotFound: true);
            m_Player_Walking = m_Player.FindAction("Walking", throwIfNotFound: true);
            m_Player_Accept = m_Player.FindAction("Accept", throwIfNotFound: true);
            m_Player_Look = m_Player.FindAction("Look", throwIfNotFound: true);
            m_Player_Attack = m_Player.FindAction("Attack", throwIfNotFound: true);
            m_Player_Dash = m_Player.FindAction("Dash", throwIfNotFound: true);
            m_Player_MouseLook = m_Player.FindAction("MouseLook", throwIfNotFound: true);
            m_Player_SlowMo = m_Player.FindAction("SlowMo", throwIfNotFound: true);
            m_Player_OpenInventory = m_Player.FindAction("OpenInventory", throwIfNotFound: true);
            m_Player_MoveInventoryLeft = m_Player.FindAction("MoveInventoryLeft", throwIfNotFound: true);
            m_Player_MoveInventoryRight = m_Player.FindAction("MoveInventoryRight", throwIfNotFound: true);
            m_Player_AttackRelease = m_Player.FindAction("AttackRelease", throwIfNotFound: true);
            m_Player_Pause = m_Player.FindAction("Pause", throwIfNotFound: true);
            m_Player_Parry = m_Player.FindAction("Parry", throwIfNotFound: true);
            // UI
            m_UI = asset.FindActionMap("UI", throwIfNotFound: true);
            m_UI_Direction = m_UI.FindAction("Direction", throwIfNotFound: true);
            m_UI_Accept = m_UI.FindAction("Accept", throwIfNotFound: true);
            m_UI_PointMouse = m_UI.FindAction("PointMouse", throwIfNotFound: true);
        }

        public void Dispose()
        {
            UnityEngine.Object.Destroy(asset);
        }

        public InputBinding? bindingMask
        {
            get => asset.bindingMask;
            set => asset.bindingMask = value;
        }

        public ReadOnlyArray<InputDevice>? devices
        {
            get => asset.devices;
            set => asset.devices = value;
        }

        public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

        public bool Contains(InputAction action)
        {
            return asset.Contains(action);
        }

        public IEnumerator<InputAction> GetEnumerator()
        {
            return asset.GetEnumerator();
        }

        IEnumerator IEnumerable.GetEnumerator()
        {
            return GetEnumerator();
        }

        public void Enable()
        {
            asset.Enable();
        }

        public void Disable()
        {
            asset.Disable();
        }
        public IEnumerable<InputBinding> bindings => asset.bindings;

        public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
        {
            return asset.FindAction(actionNameOrId, throwIfNotFound);
        }
        public int FindBinding(InputBinding bindingMask, out InputAction action)
        {
            return asset.FindBinding(bindingMask, out action);
        }

        // Player
        private readonly InputActionMap m_Player;
        private IPlayerActions m_PlayerActionsCallbackInterface;
        private readonly InputAction m_Player_Walking;
        private readonly InputAction m_Player_Accept;
        private readonly InputAction m_Player_Look;
        private readonly InputAction m_Player_Attack;
        private readonly InputAction m_Player_Dash;
        private readonly InputAction m_Player_MouseLook;
        private readonly InputAction m_Player_SlowMo;
        private readonly InputAction m_Player_OpenInventory;
        private readonly InputAction m_Player_MoveInventoryLeft;
        private readonly InputAction m_Player_MoveInventoryRight;
        private readonly InputAction m_Player_AttackRelease;
        private readonly InputAction m_Player_Pause;
        private readonly InputAction m_Player_Parry;
        public struct PlayerActions
        {
            private @Controlls m_Wrapper;
            public PlayerActions(@Controlls wrapper) { m_Wrapper = wrapper; }
            public InputAction @Walking => m_Wrapper.m_Player_Walking;
            public InputAction @Accept => m_Wrapper.m_Player_Accept;
            public InputAction @Look => m_Wrapper.m_Player_Look;
            public InputAction @Attack => m_Wrapper.m_Player_Attack;
            public InputAction @Dash => m_Wrapper.m_Player_Dash;
            public InputAction @MouseLook => m_Wrapper.m_Player_MouseLook;
            public InputAction @SlowMo => m_Wrapper.m_Player_SlowMo;
            public InputAction @OpenInventory => m_Wrapper.m_Player_OpenInventory;
            public InputAction @MoveInventoryLeft => m_Wrapper.m_Player_MoveInventoryLeft;
            public InputAction @MoveInventoryRight => m_Wrapper.m_Player_MoveInventoryRight;
            public InputAction @AttackRelease => m_Wrapper.m_Player_AttackRelease;
            public InputAction @Pause => m_Wrapper.m_Player_Pause;
            public InputAction @Parry => m_Wrapper.m_Player_Parry;
            public InputActionMap Get() { return m_Wrapper.m_Player; }
            public void Enable() { Get().Enable(); }
            public void Disable() { Get().Disable(); }
            public bool enabled => Get().enabled;
            public static implicit operator InputActionMap(PlayerActions set) { return set.Get(); }
            public void SetCallbacks(IPlayerActions instance)
            {
                if (m_Wrapper.m_PlayerActionsCallbackInterface != null)
                {
                    @Walking.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnWalking;
                    @Walking.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnWalking;
                    @Walking.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnWalking;
                    @Accept.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnAccept;
                    @Accept.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnAccept;
                    @Accept.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnAccept;
                    @Look.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnLook;
                    @Look.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnLook;
                    @Look.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnLook;
                    @Attack.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnAttack;
                    @Attack.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnAttack;
                    @Attack.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnAttack;
                    @Dash.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnDash;
                    @Dash.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnDash;
                    @Dash.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnDash;
                    @MouseLook.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnMouseLook;
                    @MouseLook.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnMouseLook;
                    @MouseLook.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnMouseLook;
                    @SlowMo.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnSlowMo;
                    @SlowMo.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnSlowMo;
                    @SlowMo.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnSlowMo;
                    @OpenInventory.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnOpenInventory;
                    @OpenInventory.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnOpenInventory;
                    @OpenInventory.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnOpenInventory;
                    @MoveInventoryLeft.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnMoveInventoryLeft;
                    @MoveInventoryLeft.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnMoveInventoryLeft;
                    @MoveInventoryLeft.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnMoveInventoryLeft;
                    @MoveInventoryRight.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnMoveInventoryRight;
                    @MoveInventoryRight.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnMoveInventoryRight;
                    @MoveInventoryRight.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnMoveInventoryRight;
                    @AttackRelease.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnAttackRelease;
                    @AttackRelease.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnAttackRelease;
                    @AttackRelease.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnAttackRelease;
                    @Pause.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnPause;
                    @Pause.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnPause;
                    @Pause.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnPause;
                    @Parry.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnParry;
                    @Parry.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnParry;
                    @Parry.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnParry;
                }
                m_Wrapper.m_PlayerActionsCallbackInterface = instance;
                if (instance != null)
                {
                    @Walking.started += instance.OnWalking;
                    @Walking.performed += instance.OnWalking;
                    @Walking.canceled += instance.OnWalking;
                    @Accept.started += instance.OnAccept;
                    @Accept.performed += instance.OnAccept;
                    @Accept.canceled += instance.OnAccept;
                    @Look.started += instance.OnLook;
                    @Look.performed += instance.OnLook;
                    @Look.canceled += instance.OnLook;
                    @Attack.started += instance.OnAttack;
                    @Attack.performed += instance.OnAttack;
                    @Attack.canceled += instance.OnAttack;
                    @Dash.started += instance.OnDash;
                    @Dash.performed += instance.OnDash;
                    @Dash.canceled += instance.OnDash;
                    @MouseLook.started += instance.OnMouseLook;
                    @MouseLook.performed += instance.OnMouseLook;
                    @MouseLook.canceled += instance.OnMouseLook;
                    @SlowMo.started += instance.OnSlowMo;
                    @SlowMo.performed += instance.OnSlowMo;
                    @SlowMo.canceled += instance.OnSlowMo;
                    @OpenInventory.started += instance.OnOpenInventory;
                    @OpenInventory.performed += instance.OnOpenInventory;
                    @OpenInventory.canceled += instance.OnOpenInventory;
                    @MoveInventoryLeft.started += instance.OnMoveInventoryLeft;
                    @MoveInventoryLeft.performed += instance.OnMoveInventoryLeft;
                    @MoveInventoryLeft.canceled += instance.OnMoveInventoryLeft;
                    @MoveInventoryRight.started += instance.OnMoveInventoryRight;
                    @MoveInventoryRight.performed += instance.OnMoveInventoryRight;
                    @MoveInventoryRight.canceled += instance.OnMoveInventoryRight;
                    @AttackRelease.started += instance.OnAttackRelease;
                    @AttackRelease.performed += instance.OnAttackRelease;
                    @AttackRelease.canceled += instance.OnAttackRelease;
                    @Pause.started += instance.OnPause;
                    @Pause.performed += instance.OnPause;
                    @Pause.canceled += instance.OnPause;
                    @Parry.started += instance.OnParry;
                    @Parry.performed += instance.OnParry;
                    @Parry.canceled += instance.OnParry;
                }
            }
        }
        public PlayerActions @Player => new PlayerActions(this);

        // UI
        private readonly InputActionMap m_UI;
        private IUIActions m_UIActionsCallbackInterface;
        private readonly InputAction m_UI_Direction;
        private readonly InputAction m_UI_Accept;
        private readonly InputAction m_UI_PointMouse;
        public struct UIActions
        {
            private @Controlls m_Wrapper;
            public UIActions(@Controlls wrapper) { m_Wrapper = wrapper; }
            public InputAction @Direction => m_Wrapper.m_UI_Direction;
            public InputAction @Accept => m_Wrapper.m_UI_Accept;
            public InputAction @PointMouse => m_Wrapper.m_UI_PointMouse;
            public InputActionMap Get() { return m_Wrapper.m_UI; }
            public void Enable() { Get().Enable(); }
            public void Disable() { Get().Disable(); }
            public bool enabled => Get().enabled;
            public static implicit operator InputActionMap(UIActions set) { return set.Get(); }
            public void SetCallbacks(IUIActions instance)
            {
                if (m_Wrapper.m_UIActionsCallbackInterface != null)
                {
                    @Direction.started -= m_Wrapper.m_UIActionsCallbackInterface.OnDirection;
                    @Direction.performed -= m_Wrapper.m_UIActionsCallbackInterface.OnDirection;
                    @Direction.canceled -= m_Wrapper.m_UIActionsCallbackInterface.OnDirection;
                    @Accept.started -= m_Wrapper.m_UIActionsCallbackInterface.OnAccept;
                    @Accept.performed -= m_Wrapper.m_UIActionsCallbackInterface.OnAccept;
                    @Accept.canceled -= m_Wrapper.m_UIActionsCallbackInterface.OnAccept;
                    @PointMouse.started -= m_Wrapper.m_UIActionsCallbackInterface.OnPointMouse;
                    @PointMouse.performed -= m_Wrapper.m_UIActionsCallbackInterface.OnPointMouse;
                    @PointMouse.canceled -= m_Wrapper.m_UIActionsCallbackInterface.OnPointMouse;
                }
                m_Wrapper.m_UIActionsCallbackInterface = instance;
                if (instance != null)
                {
                    @Direction.started += instance.OnDirection;
                    @Direction.performed += instance.OnDirection;
                    @Direction.canceled += instance.OnDirection;
                    @Accept.started += instance.OnAccept;
                    @Accept.performed += instance.OnAccept;
                    @Accept.canceled += instance.OnAccept;
                    @PointMouse.started += instance.OnPointMouse;
                    @PointMouse.performed += instance.OnPointMouse;
                    @PointMouse.canceled += instance.OnPointMouse;
                }
            }
        }
        public UIActions @UI => new UIActions(this);
        private int m_PlayerSchemeIndex = -1;
        public InputControlScheme PlayerScheme
        {
            get
            {
                if (m_PlayerSchemeIndex == -1) m_PlayerSchemeIndex = asset.FindControlSchemeIndex("Player");
                return asset.controlSchemes[m_PlayerSchemeIndex];
            }
        }
        private int m_UISchemeIndex = -1;
        public InputControlScheme UIScheme
        {
            get
            {
                if (m_UISchemeIndex == -1) m_UISchemeIndex = asset.FindControlSchemeIndex("UI");
                return asset.controlSchemes[m_UISchemeIndex];
            }
        }
        public interface IPlayerActions
        {
            void OnWalking(InputAction.CallbackContext context);
            void OnAccept(InputAction.CallbackContext context);
            void OnLook(InputAction.CallbackContext context);
            void OnAttack(InputAction.CallbackContext context);
            void OnDash(InputAction.CallbackContext context);
            void OnMouseLook(InputAction.CallbackContext context);
            void OnSlowMo(InputAction.CallbackContext context);
            void OnOpenInventory(InputAction.CallbackContext context);
            void OnMoveInventoryLeft(InputAction.CallbackContext context);
            void OnMoveInventoryRight(InputAction.CallbackContext context);
            void OnAttackRelease(InputAction.CallbackContext context);
            void OnPause(InputAction.CallbackContext context);
            void OnParry(InputAction.CallbackContext context);
        }
        public interface IUIActions
        {
            void OnDirection(InputAction.CallbackContext context);
            void OnAccept(InputAction.CallbackContext context);
            void OnPointMouse(InputAction.CallbackContext context);
        }
    }
}
